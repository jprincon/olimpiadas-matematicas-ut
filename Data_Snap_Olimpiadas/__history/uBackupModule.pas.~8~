unit uBackupModule;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.VCLUI.Wait,
  Data.DB, FireDAC.Comp.Client, FireDAC.Stan.Param, FireDAC.DatS,
  FireDAC.DApt.Intf, FireDAC.DApt, FireDAC.Comp.DataSet, WinApi.Windows;

type
  TDataModule1 = class(TDataModule)
    Conexion: TFDConnection;
    Query: TFDQuery;
    procedure DataModuleCreate(Sender: TObject);
  private
    FRutaBD: string;
  public
    { Public declarations }
  end;

var
  DataModule1: TDataModule1;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}
{$R *.dfm}
{$R BD.Res}

procedure TDataModule1.DataModuleCreate(Sender: TObject);
var
  Recursos: TResourceStream;
begin
  FRutaBD := ExtractFieldName(ParamStr(0)) + 'Backup';
  if not DirectoryExists(FRutaBD) then
    CreateDir(FRutaBD);

  if not FileExists(FRutaBD + '\BDBackup.mdb') then
  begin
    Recursos := TResourceStream.Create(HInstance, 'BD', RT_RCDATA);
    Recursos.SaveToFile(FRutaBD + '\BDBackup.mdb');
    Recursos.Free;
  end;

  Conexion.Params.Database := FRutaBD + '\BDBackup.mdb';
  Conexion.Params.DriverID := 'MSAcc';
  Conexion.Connected := True;

  ActualizarBD;

end;

end.
